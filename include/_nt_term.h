/*
 * Copyright (c) 2025 Novak StevanoviÄ‡
 * Licensed under the MIT License. See LICENSE file in project root.
 */
#ifndef __NT_TERM_H__
#define __NT_TERM_H__

#include "nt_shared.h"

struct nt_term_info
{
    /* Stores escape sequences generated by a specific terminal emulator
     * when pressing a specific key(F1, F2, DEL...).
     * The indexing inside the array must adhere to nt_esc.h */
    char** esc_key_seqs;

    /* Stores escape sequences sent to a specific terminal emulator
     * in order to invoke various functions(changing the color, clearing
     * the screen...).
     * The indexing inside the array must adhere to nt_esc.h */
    char** esc_func_seqs;

    char* name;
};

typedef enum nt_term_color_count
{
    NT_TERM_COLOR_C8,
    NT_TERM_COLOR_C256,
    NT_TERM_COLOR_TC,
    NT_TERM_COLOR_OTHER // Must be last because internally used as count
} nt_term_color_count;

/* Detects terminal(based on $TERM) and color palette(based on $TERM, $COLORTERM).
 * Sets internal values that can be retrieved by getter funcs below.
 *
 * STATUS CODES:
 * 1) NT_SUCCESS,
 * 2) NT_ERR_INIT_TERM_ENV - $TERM is not set. */
void nt_term_init(nt_status* out_status);

/* Returns NT_TERM_OTHER if not set. */
const struct nt_term_info* nt_term_get_used();

/* Returns NT_TERM_COLOR_OTHER if not set. */
nt_term_color_count nt_term_get_color_count();

void nt_term_destroy();

#endif // __NT_TERM_H__
